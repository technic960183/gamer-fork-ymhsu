# NERSC Perlmutter PrgEnv-gnu (HPE Cray Compiler Wrappers)
# No need to load any modules, just use the default environment.

# 1. Paths
CUDA_PATH       /opt/nvidia/hpc_sdk/Linux_x86_64/23.9/cuda/12.2/
FFTW2_PATH      /path/to/fftw2
FFTW3_PATH      /opt/cray/pe/fftw/3.3.10.6/x86_milan/
MPI_PATH        /opt/cray/pe/craype/2.7.30/  # This is actually the path to CC (just for perlmutter).
HDF5_PATH       /opt/cray/pe/hdf5/default/gnu/12.3
# HDF5_PATH       /opt/cray/pe/hdf5-parallel/1.12.2.9/gnu/12.3/
GRACKLE_PATH    /path/to/grackle
GSL_PATH        /path/to/gsl
LIBYT_PATH      /path/to/libyt

# 2. Compiler type
#CXX     g++              # Serial compiler
CXX     CC
CXX_MPI CC                # MPI compiler (The MPI_PATH/bin/ will be combined automatically)

# 3. Compiler flags
CXXFLAG -target-accel=nvidia80
CXXFLAG -g
CXXFLAG -O2

OPENMPFLAG -fopenmp

#LIBFLAG -flag1

NVCCFLAG_COM -O3 -I/opt/cray/pe/mpich/8.1.28/ofi/gnu/12.3/include #
#NVCCFLAG -ccbin YOUR_HOST_COMPILER
#NVCCFLAG -ccbin CC
#NVCCFLAG_COM -use_fast_math
NVCCFLAG_FLU -Xptxas -dlcm=ca -prec-div=false -ftz=true
NVCCFLAG_POT -Xptxas -dlcm=ca

# 4. Set the GPU Compute Capability
# GPU_COMPUTE_CAPABILITY = major_verison*100 + minor_version*10
# (e.g. GeForce RTX 4090 has GPU_COMPUTE_CAPABILITY 890 (8*100 + 9*10))
# You can also set it to -1 to determine the value automatically using `get_gpu_compute_capability()` in `configure.py`.
# References: https://developer.nvidia.com/cuda-gpus
#             https://en.wikipedia.org/wiki/CUDA#GPUs_supported
GPU_COMPUTE_CAPABILITY 800
